version: '3.8'

services:
  # Fi-MCP Server
  fi-mcp:
    build:
      context: ./fi-mcp-dev-master
      dockerfile: Dockerfile
    image: fi-mcp-server:${VERSION:-latest}
    environment:
      - ENVIRONMENT=production
      - FI_MCP_PORT=8080
      - FI_MCP_HOST=0.0.0.0
    env_file: ./config/production/fi-mcp.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - deltaverse-net

  # Backend API
  api:
    build:
      context: ./deltaverse-api
      dockerfile: Dockerfile
    image: deltaverse-api:${VERSION:-latest}
    environment:
      - ENVIRONMENT=production
      - FI_MCP_SERVER_URL=http://fi-mcp:8080
    env_file: ./config/production/api.env
    depends_on:
      fi-mcp:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks:
      - deltaverse-net

  # Frontend UI
  ui:
    build:
      context: ./deltaverse-ui
      dockerfile: Dockerfile
    image: deltaverse-ui:${VERSION:-latest}
    environment:
      - NODE_ENV=production
      - REACT_APP_FI_MCP_URL=https://fi-mcp.deltaverse.app
    env_file: ./config/production/ui.env
    depends_on:
      api:
        condition: service_healthy
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - deltaverse-net

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - deltaverse-net

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - deltaverse-net

  # Load Balancer
  nginx:
    image: nginx:alpine
    volumes:
      - ./config/production/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ui
      - api
    networks:
      - deltaverse-net

networks:
  deltaverse-net:
    driver: overlay
    attachable: true
